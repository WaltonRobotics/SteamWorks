// RobotBuilder Version: 2.0

//

// This file was generated by RobotBuilder. It contains sections of

// code that are automatically generated and assigned by robotbuilder.

// These sections will be updated in the future when you export to

// Java from RobotBuilder. Do not put any code or make any change in

// the blocks indicating autogenerated code or it will be lost on an

// update. Deleting the comments indicating the section will prevent

// it from being updated in the future.

package org.usfirst.frc2974.Testbed.subsystems;

import org.usfirst.frc2974.Testbed.Robot;

import org.usfirst.frc2974.Testbed.RobotMap;

import org.usfirst.frc2974.Testbed.commands.*;

import org.usfirst.frc2974.Testbed.controllers.MotionProfileController;

import edu.wpi.first.wpilibj.Encoder;

import edu.wpi.first.wpilibj.PIDController;

import edu.wpi.first.wpilibj.PIDSourceType;

import edu.wpi.first.wpilibj.Solenoid;

import edu.wpi.first.wpilibj.Talon;

import edu.wpi.first.wpilibj.command.Subsystem;

import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**

 *

 */

public class Drivetrain extends Subsystem {

	// public PIDControllerAccel leftController;

	// public PIDControllerAccel rightController;

	private final double PERIOD = .01;

	private final double kV = 0;

	private final double kK = 0;

	private final double kA = 0;

	private final double kP = 0;

	private Talon right = RobotMap.right;

	private Talon left = RobotMap.left;

	Solenoid shifter = RobotMap.pneumaticsShifter;

	MotionProfileController controller;

	public synchronized void setSpeeds(double leftSpeed, double rightSpeed) {

		right.set(-rightSpeed);

		left.set(leftSpeed);

	}

	public Drivetrain() {

		controller = new MotionProfileController(kV, kK, kA, kP, Robot.poseEstimator, PERIOD);

	}

	public void shiftUp() {

		if (!shifter.get()) {

			shifter.set(true);

		}

	}

	public void shiftDown() {

		if (shifter.get()) {

			shifter.set(false);

		}

	}

	public void dumpSmartdashboardValues() {

		SmartDashboard.putBoolean("AutoShifting", true);

	}

	public void initDefaultCommand() {

		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

		setDefaultCommand(new Drive());

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND LOL
		// CAPS

		// Set the default command for a subsystem here.

		// setDefaultCommand(new MySpecialCommand());

	}

}